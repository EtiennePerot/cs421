The most common MySQL database module for Python is MySQLdb (http://sourceforge.net/projects/mysql-python/). However, we are a team of 3, with one running Windows, one OS X, and one Linux. To avoid complications with compilation issues, we have opted to use pymysql (https://github.com/petehunt/PyMySQL/), a pure Python MySQL module. It is included here, in the folder "pymysql", and should work as-is, requiring no compilation.

The library module expects a file called "config.py" inside it, telling it the database info it needs. For convenience, a template for this config file exists under the name "config.template.py", in the same library folder.

To set up the database from scratch, or to wipe everything out and restart from scratch, run the script reset.py in library. It will wipe everything, recreate the tables, and ask if it should automatically fill them with data. Some of those steps can take quite a while, because they fetch data from the Internet.

Structure:
	The library module contains a file base.py, which has a class dbTable that can generate row classes given an SQL CREATE TABLE statement, as given by “SHOW CREATE TABLE tablename”. This allows all other files to have very little redundant code, as most of the code is automatically generated by dbTable.
	Each set of conceptually-related relations has a separate module within the library module. For example, the books table instance and the Book record class are in books.py; the authors table, has_authors table, Author class, and HasAuthor class are in authors.py, etc.
